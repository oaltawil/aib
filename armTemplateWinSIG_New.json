{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "imageTemplateName": {
            "type": "string"
        },
        "api-version": {
            "type": "string"
        },
        "svclocation": {
            "type": "string"
        }
    },
    
    "variables": {
    },

    "resources": [
        {
            "name": "[parameters('imageTemplateName')]",
            "type": "Microsoft.VirtualMachineImages/imageTemplates",
            "apiVersion": "[parameters('api-version')]",
            "location": "[parameters('svclocation')]",
            "dependsOn": [],
            "tags": {
                "imagebuilderTemplate": "AzureImageBuilderSIG",
                "userIdentity": "enabled"
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "/subscriptions/fb3b34ed-d5da-40c7-8b10-3628d5590ea3/resourcegroups/rg-aibwinsig/providers/Microsoft.ManagedIdentity/userAssignedIdentities/aibIdentity1629042837": {}
                }
            },

            "properties": {
            
                "buildTimeoutInMinutes" : 120,

                "vmProfile": {
                    "vmSize": "Standard_D2s_v4",
                    "osDiskSizeGB": 127
                },

                "source": {
                    "type": "PlatformImage",
                    "publisher": "MicrosoftWindowsDesktop",
                    "offer": "windows-7",
                    "sku": "win7-enterprise",
                    "version": "latest"
                },
            
                "customize": [
                    
                    {
                        "type": "WindowsUpdate",
                        "name": "Install-RecommendedUpdates",
                        "searchCriteria": "BrowseOnly=0 and IsInstalled=0",
                        "filters": [
                            "exclude:$false",
                            "include:$true"
                        ],
                        "updateLimit": 20
                    },

                    {
                        "type": "PowerShell",
                        "name": "Create-BuildArtifacts",
                        "inline": [
                            "@('KB2592687', 'KB3191566', 'Intl') | ForEach-Object {New-Item -Path (Join-Path -Path 'C:\\BuildArtifacts\\SecurityUpdates' -ChildPath $_) -ItemType Directory -Force}",
                            "@('FSLogix', 'VSCode', 'Edge', 'Office') | ForEach-Object {New-Item -Path (Join-Path -Path 'C:\\BuildArtifacts\\Applications' -ChildPath $_) -ItemType Directory -Force}"
                        ],
                        "runAsSystem": false,
                        "runElevated": false
                    },

                    {
                        "type": "File",
                        "name": "Download-KB2592687-RDP8.0",
                        "sourceUri": "https://download.microsoft.com/download/A/F/5/AF5C565C-9771-4BFB-973B-4094C1F58646/Windows6.1-KB2592687-x64.msu",
                        "destination": "C:\\BuildArtifacts\\SecurityUpdates\\KB2592687\\Windows6.1-KB2592687-x64.msu"
                    },

                    {
                        "type": "File",
                        "name": "Download-KB3191566-WMF5.1",
                        "sourceUri": "https://download.microsoft.com/download/6/F/5/6F5FF66C-6775-42B0-86C4-47D41F2DA187/Win7AndW2K8R2-KB3191566-x64.zip",
                        "destination":"C:\\BuildArtifacts\\SecurityUpdates\\KB3191566.zip"
                    },

                    {
                        "type": "File",
                        "name": "Download-InternationalSettings",
                        "sourceUri": "https://raw.githubusercontent.com/oaltawil/wvd7/main/InternationalSettings.xml",
                        "destination":"C:\\BuildArtifacts\\SecurityUpdates\\Intl\\InternationalSettings.xml"
                    },

                    {
                        "type": "File",
                        "name": "Download-MicrosoftEdge",
                        "sourceUri": "https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/fbfdb4b9-1af5-4723-a7bc-4dac657f228c/MicrosoftEdgeEnterpriseX64.msi",
                        "destination":"C:\\BuildArtifacts\\Applications\\Edge\\MicrosoftEdgeEnterpriseX64.msi"
                    },

                    {
                        "type": "File",
                        "name": "Download-OfficeDeploymentTool",
                        "sourceUri": "https://download.microsoft.com/download/2/7/A/27AF1BE6-DD20-4CB4-B154-EBAB8A7D4A7E/officedeploymenttool_14131-20278.exe",
                        "destination": "C:\\BuildArtifacts\\Applications\\Office\\OfficeDeploymentTool.exe"
                    },

                    {
                        "type": "File",
                        "name": "Download-OfficeConfigurationFile",
                        "sourceUri": "https://deploymentconfigstorage.blob.core.windows.net/deploymentconfig/9a2866fd-a1ce-4f8f-afcc-2143e2bf92bf/575e62f4-fcdf-46f1-a06a-3a0f0b20ace1.xml?sv=2018-11-09&sr=b&sig=ToqsYnLAu0YwKkdM1bf6hmpXDCRCsTQxuHYUL2X%2FrOw%3D&st=2021-08-17T19%3A58%3A04Z&se=2023-08-17T20%3A03%3A04Z&sp=r",
                        "destination": "C:\\BuildArtifacts\\Applications\\Office\\OfficeConfiguration.xml"
                    },

                    {
                        "type": "PowerShell",
                        "name": "Expand-KB3191566-WMF5.1",
                        "inline": [
                            "$ZipFilePath = 'C:\\BuildArtifacts\\SecurityUpdates\\KB3191566.zip'",
                            "if (-not (Test-Path -Path $ZipFilePath)) {Write-Error \"The following file could not be found: $ZipFilePath.\"}",
                            "$DestinationFolderPath = 'C:\\BuildArtifacts\\SecurityUpdates\\KB3191566'",
                            "if (-not (Test-Path -Path $DestinationFolderPath)) {New-Item -Path $DestinationFolderPath -ItemType Directory -Force}",
                            "Write-Output \"Expanding $ZipFilePath to $DestinationFolderPath.\"",
                            "$ShellObject = New-Object -ComObject Shell.Application",
                            "$ZipFileContents = $ShellObject.NameSpace($ZipFilePath).Items()",
                            "$FolderObject = $ShellObject.NameSpace($DestinationFolderPath)",
                            "$FolderObject.CopyHere($ZipFileContents, 20)",
                            "if (-not (Test-Path -Path 'C:\\BuildArtifacts\\SecurityUpdates\\KB3191566\\Win7AndW2K8R2-KB3191566-x64.msu')) {Write-Error \"Failed to extract $ZipFilePath to $DestinationFolderPath.\"}"
                        ],
                        "runElevated": false
                    },

                    {
                        "type": "PowerShell",
                        "name": "Install-KB2592687-RDP8.0",
                        "inline": [
                            "Write-Output 'Installing KB2592687: Update for Remote Desktop Protocol 8.0 for Windows 7 SP1.'",
                            "$MsuFilePath = 'C:\\BuildArtifacts\\SecurityUpdates\\KB2592687\\Windows6.1-KB2592687-x64.msu'",
                            "if (-not (Test-Path -Path $MsuFilePath)) {Write-Error \"The following file could not be found: $MsuFilePath.\"}",
                            "$Process = Start-Process -Wait -NoNewWindow -PassThru -FilePath wusa.exe -ArgumentList $MsuFilePath, /quiet, /norestart",
                            "return $Process.ExitCode"
                        ],
                        "runElevated": true,
                        "valid_exit_codes": [0, 2359301, 2359302]
                    },

                    {
                        "type": "PowerShell",
                        "name": "Enable-RDP8.0",
                        "inline": [
                            "Write-Output 'Enabling Remote Desktop Protocol 8.0.'",
                            "New-Item -Path 'HKLM:SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Force",
                            "Set-ItemProperty -Path 'HKLM:SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services' -Name fServerEnableRDP8 -Type Dword -Value 1 -Force"
                        ],
                        "runElevated": true
                    },
                    
                    {
                        "type": "PowerShell",
                        "name": "Install-KB3191566-WMF5.1",
                        "inline": [
                            "Write-Output 'Installing KB3191566: Windows Management Framework 5.1 for Windows 7 SP1.'",
                            "$MsuFilePath = 'C:\\BuildArtifacts\\SecurityUpdates\\KB3191566\\Win7AndW2K8R2-KB3191566-x64.msu'",
                            "if (-not (Test-Path -Path MsuFilePath)) {Write-Error \"The following file could not be found: $MsuFilePath.\"}",
                            "$Process = Start-Process -Wait -NoNewWindow -PassThru -FilePath wusa.exe -ArgumentList $MsuFilePath, /quiet, /norestart",
                            "return $Process.ExitCode"
                        ],
                        "runElevated": true,
                        "valid_exit_codes": [0, 2359301, 2359302]
                    },

                    {
                        "type": "PowerShell",
                        "name": "Enable-TLS1.2",
                        "scriptUri": "https://raw.githubusercontent.com/oaltawil/wvd7/main/Enable-TLS12.ps1",
                        "runElevated": true
                    },

                    {
                        "type": "WindowsRestart",
                        "name": "Restart-Computer",
                        "restartCheckCommand": "echo Azure-Image-Builder-Restarted-the-VM  > c:\\BuildArtifacts\\azureImageBuilderRestart.txt",
                        "restartTimeout": "15m"
                    },

                    {
                        "type": "PowerShell",
                        "name": "Download-VSCode",
                        "inline": [
                            "Write-Output 'Downloading Visual Studio Code.'",
                            "$DownloadUri = 'https://update.code.visualstudio.com/latest/win32-x64/stable'",
                            "$DestinationFilePath = 'C:\\BuildArtifacts\\Applications\\VSCode\\VSCodeSetup-x64.exe'",
                            "Invoke-WebRequest -UseBasicParsing -Uri $DownloadUri -OutFile $DestinationFilePath",
                            "if (-not (Test-Path -Path $DestinationFilePath)) {Write-Error \"Failed to download Visual Studio Code from $DownloadUri to $DestinationFilePath.\"}"
                        ],
                        "runElevated": false
                    },

                    {
                        "type": "PowerShell",
                        "name": "Download-FSLogixApps",
                        "inline": [
                            "Write-Output 'Downloading FSLogix Apps.'",
                            "$DownloadUri = 'https://aka.ms/fslogix/download'",
                            "$DestinationFilePath = 'C:\\BuildArtifacts\\Applications\\FSLogixApps.zip'",
                            "Invoke-WebRequest -UseBasicParsing -Uri $DownloadUri -OutFile $DestinationFilePath",
                            "if (-not (Test-Path -Path $DestinationFilePath)) {Write-Error \"Failed to download FSLogix Apps from $DownloadUri to $DestinationFilePath.\"}"
                        ],
                        "runElevated": false
                    },

                    {
                        "type": "PowerShell",
                        "name": "Expand-FSLogixApps",
                        "inline": [
                            "$ZipFilePath = 'C:\\BuildArtifacts\\Applications\\FSLogixApps.zip'",
                            "if (-not (Test-Path -Path $ZipFilePath)) {Write-Error \"The Zip file could not be found: $ZipFilePath.\"}",
                            "$DestinationFolderPath = 'C:\\BuildArtifacts\\Applications\\FSLogix'",
                            "if (-not (Test-Path -Path $DestinationFolderPath)) {New-Item -Path $DestinationFolderPath -ItemType Directory -Force}",
                            "Write-Output \"Expanding $ZipFilePath to $DestinationFolderPath.\"",
                            "Expand-Archive -Path $ZipFilePath -DestinationPath $DestinationFolderPath -Force",
                            "if (-not (Test-Path -Path (Join-Path -Path $DestinationFolderPath -ChildPath 'x64\\Release\\FSLogixAppsSetup.exe'))) {Write-Error \"Failed to expand $ZipFilePath to $DestinationFolderPath.\"}"
                        ],
                        "runElevated": false
                    },

                    {
                        "type": "PowerShell",
                        "name": "Install-Office365",
                        "inline": [
                            "Write-Output 'Installing Microsoft 365 Apps for Enterprise.'",
                            "$OfficeDeploymentToolFilePath = 'C:\\BuildArtifacts\\Applications\\Office\\OfficeDeploymentTool.exe'",
                            "if (-not (Test-Path -Path $OfficeDeploymentToolFilePath)) {Write-Error \"The following file could not be found: $OfficeDeploymentToolFilePath.\"}",
                            "$OfficeConfigurationFilePath = 'C:\\BuildArtifacts\\Applications\\Office\\OfficeConfiguration.xml'",
                            "if (-not (Test-Path -Path $OfficeConfigurationFilePath)) {Write-Error \"The following file could not be found: $OfficeConfigurationFilePath.\"}",
                            "$OfficeDestinationFolderPath = 'C:\\BuildArtifacts\\Applications\\Office'",
                            "Start-Process -Wait -NoNewWindow -FilePath $OfficeDeploymentToolFilePath -ArgumentList /extract:$OfficeDestinationFolderPath, /quiet, /passive, /norestart",
                            "$ExeFilePath = Join-Path -Path $OfficeDestinationFolderPath -ChildPath 'setup.exe'",
                            "if (-not (Test-Path -Path $ExeFilePath)) {Write-Error \"Failed to extract $OfficeDeploymentToolFilePath to $DestinationFolderPath.\"}",
                            "$Process = Start-Process -Wait -NoNewWindow -PassThru -FilePath $ExeFilePath -ArgumentList /configure, $OfficeConfigurationFilePath",
                            "return $Process.ExitCode"
                        ],
                        "runElevated": true
                    },

                    {
                        "type": "PowerShell",
                        "name": "Install-MicrosoftEdge",
                        "inline": [
                            "Write-Output 'Installing Microsoft Edge Enterprise x64.'",
                            "$MsiFilePath = 'C:\\BuildArtifacts\\Applications\\Edge\\MicrosoftEdgeEnterpriseX64.msi'",
                            "if (-not (Test-Path -Path $MsiFilePath)) {Write-Error \"The following file could not be found: $MsiFilePath.\"}",
                            "$Process = Start-Process -Wait -NoNewWindow -PassThru -FilePath msiexec.exe -ArgumentList /i, $MsiFilePath, /quiet, /passive, /qn, /norestart",
                            "return $Process.ExitCode"
                        ],
                        "runElevated": true,
                        "valid_exit_codes": [0, 1707, 3010, 1641, 1618]
                    },

                    {
                        "type": "PowerShell",
                        "name": "Install-VSCode",
                        "inline": [
                            "Write-Output 'Installing Microsoft Visual Studio Code x64.'",
                            "$ExeFilePath = 'C:\\BuildArtifacts\\Applications\\VSCode\\VSCodeSetup-x64.exe'",
                            "if (-not (Test-Path -Path $ExeFilePath)) {Write-Error \"The following file could not be found: $ExeFilePath.\"}",
                            "$Process = Start-Process -Wait -NoNewWindow -PassThru -FilePath $ExeFilePath -ArgumentList /verysilent, /norestart, /mergetasks=!runcode",
                            "return $Process.ExitCode"
                        ],
                        "runElevated": true
                    },

                    {
                        "type": "PowerShell",
                        "name": "Install-FSLogixApps",
                        "inline": [
                            "Write-Output 'Installing FSLogixApps.'",
                            "$ExeFilePath = 'C:\\BuildArtifacts\\Applications\\FSLogix\\x64\\Release\\FSLogixAppsSetup.exe'",
                            "if (-not (Test-Path -Path $ExeFilePath)) {Write-Error \"The following file could not be found: $ExeFilePath.\"}",
                            "$Process = Start-Process -Wait -NoNewWindow -PassThru -FilePath $ExeFilePath -ArgumentList /install, /quiet, /norestart",
                            "return $Process.ExitCode"
                        ],
                        "runElevated": true
                    },

                    {
                        "type": "PowerShell",
                        "name": "Verify-InstalledComponents",
                        "inline": [
                            "Write-Output 'Verifying Installed Components and Cleaning up Build Artifacts'",
                            "Get-Host",
                            "Get-WmiObject -Class Win32_QuickFixEngineering -Filter \"(HotFixID = 'KB2592687') OR (HotfixID = 'KB3191566')\"",
                            "Get-WmiObject -Class Win32_Product -Filter \"Name like '%FSLogix%'\"",
                            "Get-WmiObject -Class Win32_Product -Filter \"Name like '%Edge%'\"",
                            "Get-WmiObject -Class Win32_Product -Filter \"Name like '%Office%'\"",
                            "Get-Item -Path 'C:\\Program Files\\Microsoft VS Code\\Code.exe'",
                            "Get-ChildItem -Path C:\\BuildArtifacts -File -Recurse | ForEach-Object {Remove-Item -Path $_.FullName -Force}",
                            "Remove-Item -Path C:\\BuildArtifacts -Recurse -Force"
                        ],
                        "runElevated": true
                    }

                ],
                "distribute": [
                    {   
                        "type": "SharedImage",
                        "galleryImageId": "/subscriptions/fb3b34ed-d5da-40c7-8b10-3628d5590ea3/resourceGroups/rg-aibwinsig/providers/Microsoft.Compute/galleries/scrapaper_SharedImageGallery/images/customWindows7Image",
                        "runOutputName": "build-win7-enterprise",
                        "artifactTags": {
                            "source": "azureVmImageBuilder",
                            "baseosimg": "win7-enterprise"
                        },
                        "replicationRegions": [
                            "eastus",
                            "eastus2"
                        ]
                    }
                ]
            }
        }
    ]
}